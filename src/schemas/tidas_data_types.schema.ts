// Generated by ts-to-zod
import { z } from 'zod';

export const CASNumberSchema = z.string().regex(/^[0-9]{2,7}-[0-9]{2}-[0-9]$/);

export const FTSchema = z.string();

export const Int1Schema = z.string().regex(/^[0-9]$/);

export const Int5Schema = z.string().regex(/^(0|[1-9]\d{0,4})$/);

export const Int6Schema = z.string().regex(/^(0|[1-9]\d{0,5})$/);

export const LevelTypeSchema = Int1Schema;

export const PercSchema = z
  .string()
  .regex(/^(100(\.0{1,3})?|([0-9]|[1-9][0-9])(\.\d{1,3})?)$/);

export const MatRSchema = z.string();

export const MatVSchema = z.string();

export const RealSchema = z
  .string()
  .regex(/[+-]?(\d+(\.\d*)?|\.\d+)([Ee][+-]?\d+)?$/);

export const STSchema = z.string().max(1000);

export const StringSchema = z.string().min(1).max(500);

export const GISSchema = z
  .string()
  .regex(
    /^\s*[+-]?((90(\.0+)?)|([0-8]?\d(\.\d+)?))\s*;\s*[+-]?((180(\.0+)?)|((1[0-7]\d|[0-9]?\d)(\.\d+)?))\s*$/
  );

export const UUIDSchema = z
  .string()
  .regex(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/);

export const YearSchema = z.number().min(1000).max(9999);

export const dateTimeSchema = z.string().datetime();

const MultiLangArrayLikeSchema = z.any();

const MultiLangItemClassSchema = z.any();

export const StringMultiLangSchema = z.union([
  MultiLangArrayLikeSchema,
  MultiLangItemClassSchema,
]);

export const STMultiLangSchema = z.union([
  MultiLangArrayLikeSchema,
  MultiLangItemClassSchema,
]);

export const FTMultiLangSchema = z.union([
  MultiLangArrayLikeSchema,
  MultiLangItemClassSchema,
]);

export const GlobalReferenceTypeSchema = z.union([
  z.object({
    '@type': z.string(),
    '@refObjectId': z.string(),
    '@version': z.string(),
    '@uri': z.string(),
    'common:shortDescription': STMultiLangSchema,
  }),
  z.array(
    z.object({
      '@type': z.string(),
      '@refObjectId': z.string(),
      '@version': z.string(),
      '@uri': z.string(),
      'common:shortDescription': STMultiLangSchema,
    })
  ),
]);
